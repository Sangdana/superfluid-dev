name: CI | Pre-Release Draft SDK Core Integration Test

on:
  pull_request:
    branches:
      - "release-sdk-core-stable"
    paths:
      - "packages/sdk-core/**"
      - "packages/subgraph/**"
      - ".github/workflows/ci.pre-release-sdk-core.yml"
      - ".github/workflows/call.test-sdk-core.yml"

jobs:
  show-contexts:
    name: Show Contexts

    runs-on: ubuntu-latest

    steps:
      - name: Show contexts
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.sha: ${{ github.sha }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.base_ref: ${{ github.base_ref }}

  # test query and subgraph schemas are in sync and query works (safe to deploy w/o breaking changes)
  test-query-schema-against-deployed-v1-subgraphs:
    uses: ./.github/workflows/call.check-query-schema-against-subgraph.yml
    name: Test Query Schema and Queries Against Local and Deployed V1 Subgraphs
    with:
      subgraph-release: v1

  # tests non-query sdk-core functionality
  build-and-test-live-v1-subgraph-current-release:
    uses: ./.github/workflows/call.test-sdk-core.yml
    name: Build and Test SDK-Core (Release branch)
    if: github.base_ref == 'release-sdk-core-stable'
    with:
      subgraph-release: v1

  # C. build and test dev endpoint subgraph with release sdk-core
  # purpose: ensure the new sdk-core version works with the currently deployed dev goerli endpoint
  # assumption: we assume that dev endpoint is synced (do a manual check here to see this is true)
  # result: this should work as ci.canary should've passed otherwise we need to go back and complete the previous release
  build-and-test-live-dev-subgraph-current-release:
    uses: ./.github/workflows/call.test-sdk-core.yml
    name: Build and Test SDK-Core (Release branch)
    if: github.base_ref == 'release-sdk-core-stable'
    with:
      subgraph-release: dev